// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { NextRequest } from 'next/server.js'

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}




// Validate ../app/api/bets/current/place/route.ts
{
  const handler = {} as typeof import("../app/api/bets/current/place/route.js")
  handler satisfies RouteHandlerConfig<"/api/bets/current/place">
}

// Validate ../app/api/bets/current/refund/route.ts
{
  const handler = {} as typeof import("../app/api/bets/current/refund/route.js")
  handler satisfies RouteHandlerConfig<"/api/bets/current/refund">
}

// Validate ../app/api/healthz/route.ts
{
  const handler = {} as typeof import("../app/api/healthz/route.js")
  handler satisfies RouteHandlerConfig<"/api/healthz">
}

// Validate ../app/api/leaderboards/dsc/route.ts
{
  const handler = {} as typeof import("../app/api/leaderboards/dsc/route.js")
  handler satisfies RouteHandlerConfig<"/api/leaderboards/dsc">
}

// Validate ../app/api/leaderboards/elo/route.ts
{
  const handler = {} as typeof import("../app/api/leaderboards/elo/route.js")
  handler satisfies RouteHandlerConfig<"/api/leaderboards/elo">
}

// Validate ../app/api/leaderboards/gpc/route.ts
{
  const handler = {} as typeof import("../app/api/leaderboards/gpc/route.js")
  handler satisfies RouteHandlerConfig<"/api/leaderboards/gpc">
}

// Validate ../app/api/matches/current/lock/route.ts
{
  const handler = {} as typeof import("../app/api/matches/current/lock/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/current/lock">
}

// Validate ../app/api/matches/current/record/route.ts
{
  const handler = {} as typeof import("../app/api/matches/current/record/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/current/record">
}

// Validate ../app/api/matches/current/route.ts
{
  const handler = {} as typeof import("../app/api/matches/current/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/current">
}

// Validate ../app/api/matches/current/score/route.ts
{
  const handler = {} as typeof import("../app/api/matches/current/score/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/current/score">
}

// Validate ../app/api/matches/open/route.ts
{
  const handler = {} as typeof import("../app/api/matches/open/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/open">
}

// Validate ../app/api/matches/record/route.ts
{
  const handler = {} as typeof import("../app/api/matches/record/route.js")
  handler satisfies RouteHandlerConfig<"/api/matches/record">
}






